apiVersion: v1
kind: Namespace
metadata:
  name: keycloak
---
apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  name: keycloak
  namespace: keycloak
spec:
  instances: 1
  db:
    vendor: postgres
    host: postgres-db
    usernameSecret:
      name: keycloak-db-secret
      key: username
    passwordSecret:
      name: keycloak-db-secret
      key: password
  http:
    httpEnabled: false
    httpPort: 8180
  hostname:
    hostname: "keycloak.${domain}"
    strict: true
    strictBackchannel: false

---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-initial-admin
  namespace: keycloak
data:
  username: "${base64encode(username)}"
  password: "${base64encode(password)}"
type: kubernetes.io/basic-auth
---
# PostgreSQL StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql-db
  namespace: keycloak
spec:
  serviceName: postgresql-db-service
  selector:
    matchLabels:
      app: postgresql-db
  replicas: 1
  template:
    metadata:
      labels:
        app: postgresql-db
    spec:
      containers:
        - name: postgresql-db
          image: postgres:latest
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-db-secret
                  key: password
            - name: PGDATA
              value: /data/pgdata
            - name: POSTGRES_DB
              value: keycloak
          volumeMounts:
            - mountPath: /data
              name: empty
      volumes:
        - name: empty
          emptyDir: {}
---
# PostgreSQL StatefulSet Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-db
  namespace: keycloak
spec:
  selector:
    app: postgresql-db
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-db-secret
  namespace: keycloak
data:
  username: cG9zdGdyZXM= # postgres
  password: cG9zdGdyZXM= # postgres
type: Opaque
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-clusterissuer
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    external-dns.alpha.kubernetes.io/hostname: "keycloak.${domain}"
    nginx.ingress.kubernetes.io/server-snippet: |2-
      location ~* "^/realms/master/metrics" {
        return 301 /realms/master;
      }
  name: keycloak
  namespace: keycloak
spec:
  rules:
    - host: "keycloak.${domain}"
      http:
        paths:
          - backend:
              service:
                name: keycloak-service
                port:
                  number: 8180
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - "keycloak.${domain}"
      secretName: keycloak-auth-tls
